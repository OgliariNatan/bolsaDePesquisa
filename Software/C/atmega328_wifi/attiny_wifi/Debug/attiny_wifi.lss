
attiny_wifi.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800100  00000840  000008d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000840  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800106  00800106  000008da  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000008da  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000090c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000f0  00000000  00000000  0000094c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001aad  00000000  00000000  00000a3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009ab  00000000  00000000  000024e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000876  00000000  00000000  00002e94  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002ec  00000000  00000000  0000370c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006b5  00000000  00000000  000039f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000df5  00000000  00000000  000040ad  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00004ea2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 bb 00 	jmp	0x176	; 0x176 <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a6 e0       	ldi	r26, 0x06	; 6
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	ac 30       	cpi	r26, 0x0C	; 12
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>

00000084 <__do_copy_data>:
  84:	11 e0       	ldi	r17, 0x01	; 1
  86:	a0 e0       	ldi	r26, 0x00	; 0
  88:	b1 e0       	ldi	r27, 0x01	; 1
  8a:	e0 e4       	ldi	r30, 0x40	; 64
  8c:	f8 e0       	ldi	r31, 0x08	; 8
  8e:	02 c0       	rjmp	.+4      	; 0x94 <__do_copy_data+0x10>
  90:	05 90       	lpm	r0, Z+
  92:	0d 92       	st	X+, r0
  94:	a6 30       	cpi	r26, 0x06	; 6
  96:	b1 07       	cpc	r27, r17
  98:	d9 f7       	brne	.-10     	; 0x90 <__do_copy_data+0xc>
  9a:	0e 94 7b 00 	call	0xf6	; 0xf6 <main>
  9e:	0c 94 1e 04 	jmp	0x83c	; 0x83c <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <setup_rf>:
	EICRA |= _BV(ISC01);
	EIMSK |= _BV(INT0);
	nRF24L01_begin(rf);
	return rf;
}
void process_message (char *message){
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	0e 94 d6 00 	call	0x1ac	; 0x1ac <nRF24L01_init>
  ae:	ec 01       	movw	r28, r24
  b0:	85 e2       	ldi	r24, 0x25	; 37
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	99 83       	std	Y+1, r25	; 0x01
  b6:	88 83       	st	Y, r24
  b8:	22 e0       	ldi	r18, 0x02	; 2
  ba:	2a 83       	std	Y+2, r18	; 0x02
  bc:	9c 83       	std	Y+4, r25	; 0x04
  be:	8b 83       	std	Y+3, r24	; 0x03
  c0:	21 e0       	ldi	r18, 0x01	; 1
  c2:	2d 83       	std	Y+5, r18	; 0x05
  c4:	9f 83       	std	Y+7, r25	; 0x07
  c6:	8e 83       	std	Y+6, r24	; 0x06
  c8:	25 e0       	ldi	r18, 0x05	; 5
  ca:	28 87       	std	Y+8, r18	; 0x08
  cc:	9a 87       	std	Y+10, r25	; 0x0a
  ce:	89 87       	std	Y+9, r24	; 0x09
  d0:	23 e0       	ldi	r18, 0x03	; 3
  d2:	2b 87       	std	Y+11, r18	; 0x0b
  d4:	9d 87       	std	Y+13, r25	; 0x0d
  d6:	8c 87       	std	Y+12, r24	; 0x0c
  d8:	84 e0       	ldi	r24, 0x04	; 4
  da:	8e 87       	std	Y+14, r24	; 0x0e
  dc:	e9 e6       	ldi	r30, 0x69	; 105
  de:	f0 e0       	ldi	r31, 0x00	; 0
  e0:	80 81       	ld	r24, Z
  e2:	82 60       	ori	r24, 0x02	; 2
  e4:	80 83       	st	Z, r24
  e6:	e8 9a       	sbi	0x1d, 0	; 29
  e8:	ce 01       	movw	r24, r28
  ea:	0e 94 c6 01 	call	0x38c	; 0x38c <nRF24L01_begin>
  ee:	ce 01       	movw	r24, r28
  f0:	df 91       	pop	r29
  f2:	cf 91       	pop	r28
  f4:	08 95       	ret

000000f6 <main>:
  f6:	cf 93       	push	r28
  f8:	df 93       	push	r29
  fa:	cd b7       	in	r28, 0x3d	; 61
  fc:	de b7       	in	r29, 0x3e	; 62
  fe:	ad 97       	sbiw	r28, 0x2d	; 45
 100:	0f b6       	in	r0, 0x3f	; 63
 102:	f8 94       	cli
 104:	de bf       	out	0x3e, r29	; 62
 106:	0f be       	out	0x3f, r0	; 63
 108:	cd bf       	out	0x3d, r28	; 61
 10a:	ce 01       	movw	r24, r28
 10c:	01 96       	adiw	r24, 0x01	; 1
 10e:	7c 01       	movw	r14, r24
 110:	85 e0       	ldi	r24, 0x05	; 5
 112:	f7 01       	movw	r30, r14
 114:	11 92       	st	Z+, r1
 116:	8a 95       	dec	r24
 118:	e9 f7       	brne	.-6      	; 0x114 <main+0x1e>
 11a:	78 94       	sei
 11c:	0e 94 53 00 	call	0xa6	; 0xa6 <setup_rf>
 120:	8c 01       	movw	r16, r24
 122:	a7 01       	movw	r20, r14
 124:	60 e0       	ldi	r22, 0x00	; 0
 126:	70 e0       	ldi	r23, 0x00	; 0
 128:	0e 94 2d 01 	call	0x25a	; 0x25a <nRF24L01_listen>
 12c:	21 e0       	ldi	r18, 0x01	; 1
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	ae 01       	movw	r20, r28
 132:	4a 5f       	subi	r20, 0xFA	; 250
 134:	5f 4f       	sbci	r21, 0xFF	; 255
 136:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <__data_end>
 13a:	c8 01       	movw	r24, r16
 13c:	0e 94 1f 01 	call	0x23e	; 0x23e <nRF24L01_read_register>
 140:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <rf_interrupt>
 144:	88 23       	and	r24, r24
 146:	e1 f3       	breq	.-8      	; 0x140 <main+0x4a>
 148:	10 92 07 01 	sts	0x0107, r1	; 0x800107 <rf_interrupt>
 14c:	06 c0       	rjmp	.+12     	; 0x15a <main+0x64>
 14e:	be 01       	movw	r22, r28
 150:	65 5f       	subi	r22, 0xF5	; 245
 152:	7f 4f       	sbci	r23, 0xFF	; 255
 154:	c8 01       	movw	r24, r16
 156:	0e 94 c1 02 	call	0x582	; 0x582 <nRF24L01_read_received_data>
 15a:	c8 01       	movw	r24, r16
 15c:	0e 94 94 01 	call	0x328	; 0x328 <nRF24L01_data_received>
 160:	81 11       	cpse	r24, r1
 162:	f5 cf       	rjmp	.-22     	; 0x14e <main+0x58>
 164:	ae 01       	movw	r20, r28
 166:	4f 5f       	subi	r20, 0xFF	; 255
 168:	5f 4f       	sbci	r21, 0xFF	; 255
 16a:	60 e0       	ldi	r22, 0x00	; 0
 16c:	70 e0       	ldi	r23, 0x00	; 0
 16e:	c8 01       	movw	r24, r16
 170:	0e 94 2d 01 	call	0x25a	; 0x25a <nRF24L01_listen>
 174:	e5 cf       	rjmp	.-54     	; 0x140 <main+0x4a>

00000176 <__vector_1>:
	else if (strcmp(message, "OFF") == 0){//quando a mensagem foi "OFF" faz algo
		//Função a ser implemantada 
	}
} 

ISR(INT0_vect){
 176:	1f 92       	push	r1
 178:	0f 92       	push	r0
 17a:	0f b6       	in	r0, 0x3f	; 63
 17c:	0f 92       	push	r0
 17e:	11 24       	eor	r1, r1
 180:	8f 93       	push	r24
	rf_interrupt = true;
 182:	81 e0       	ldi	r24, 0x01	; 1
 184:	80 93 07 01 	sts	0x0107, r24	; 0x800107 <rf_interrupt>
 188:	8f 91       	pop	r24
 18a:	0f 90       	pop	r0
 18c:	0f be       	out	0x3f, r0	; 63
 18e:	0f 90       	pop	r0
 190:	1f 90       	pop	r1
 192:	18 95       	reti

00000194 <copy_address>:
 194:	fc 01       	movw	r30, r24
 196:	a6 2f       	mov	r26, r22
 198:	b7 2f       	mov	r27, r23
 19a:	9c 01       	movw	r18, r24
 19c:	2b 5f       	subi	r18, 0xFB	; 251
 19e:	3f 4f       	sbci	r19, 0xFF	; 255
 1a0:	91 91       	ld	r25, Z+
 1a2:	9d 93       	st	X+, r25
 1a4:	e2 17       	cp	r30, r18
 1a6:	f3 07       	cpc	r31, r19
 1a8:	d9 f7       	brne	.-10     	; 0x1a0 <copy_address+0xc>
 1aa:	08 95       	ret

000001ac <nRF24L01_init>:
 1ac:	80 e1       	ldi	r24, 0x10	; 16
 1ae:	90 e0       	ldi	r25, 0x00	; 0
 1b0:	0e 94 f1 02 	call	0x5e2	; 0x5e2 <malloc>
 1b4:	20 e1       	ldi	r18, 0x10	; 16
 1b6:	fc 01       	movw	r30, r24
 1b8:	11 92       	st	Z+, r1
 1ba:	2a 95       	dec	r18
 1bc:	e9 f7       	brne	.-6      	; 0x1b8 <nRF24L01_init+0xc>
 1be:	08 95       	ret

000001c0 <nRF24L01_send_command>:
 1c0:	cf 93       	push	r28
 1c2:	df 93       	push	r29
 1c4:	ec 01       	movw	r28, r24
 1c6:	da 01       	movw	r26, r20
 1c8:	e8 81       	ld	r30, Y
 1ca:	f9 81       	ldd	r31, Y+1	; 0x01
 1cc:	50 81       	ld	r21, Z
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	0a 80       	ldd	r0, Y+2	; 0x02
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <nRF24L01_send_command+0x1a>
 1d6:	88 0f       	add	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	0a 94       	dec	r0
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <nRF24L01_send_command+0x16>
 1de:	80 95       	com	r24
 1e0:	85 23       	and	r24, r21
 1e2:	80 83       	st	Z, r24
 1e4:	6e bd       	out	0x2e, r22	; 46
 1e6:	0d b4       	in	r0, 0x2d	; 45
 1e8:	07 fe       	sbrs	r0, 7
 1ea:	fd cf       	rjmp	.-6      	; 0x1e6 <nRF24L01_send_command+0x26>
 1ec:	8e b5       	in	r24, 0x2e	; 46
 1ee:	8f 87       	std	Y+15, r24	; 0x0f
 1f0:	21 15       	cp	r18, r1
 1f2:	31 05       	cpc	r19, r1
 1f4:	79 f0       	breq	.+30     	; 0x214 <nRF24L01_send_command+0x54>
 1f6:	fd 01       	movw	r30, r26
 1f8:	2a 0f       	add	r18, r26
 1fa:	3b 1f       	adc	r19, r27
 1fc:	df 01       	movw	r26, r30
 1fe:	90 81       	ld	r25, Z
 200:	9e bd       	out	0x2e, r25	; 46
 202:	0d b4       	in	r0, 0x2d	; 45
 204:	07 fe       	sbrs	r0, 7
 206:	fd cf       	rjmp	.-6      	; 0x202 <nRF24L01_send_command+0x42>
 208:	9e b5       	in	r25, 0x2e	; 46
 20a:	9c 93       	st	X, r25
 20c:	31 96       	adiw	r30, 0x01	; 1
 20e:	e2 17       	cp	r30, r18
 210:	f3 07       	cpc	r31, r19
 212:	a1 f7       	brne	.-24     	; 0x1fc <nRF24L01_send_command+0x3c>
 214:	e8 81       	ld	r30, Y
 216:	f9 81       	ldd	r31, Y+1	; 0x01
 218:	20 81       	ld	r18, Z
 21a:	81 e0       	ldi	r24, 0x01	; 1
 21c:	90 e0       	ldi	r25, 0x00	; 0
 21e:	0a 80       	ldd	r0, Y+2	; 0x02
 220:	02 c0       	rjmp	.+4      	; 0x226 <nRF24L01_send_command+0x66>
 222:	88 0f       	add	r24, r24
 224:	99 1f       	adc	r25, r25
 226:	0a 94       	dec	r0
 228:	e2 f7       	brpl	.-8      	; 0x222 <nRF24L01_send_command+0x62>
 22a:	82 2b       	or	r24, r18
 22c:	80 83       	st	Z, r24
 22e:	8f 85       	ldd	r24, Y+15	; 0x0f
 230:	df 91       	pop	r29
 232:	cf 91       	pop	r28
 234:	08 95       	ret

00000236 <nRF24L01_write_register>:
 236:	60 62       	ori	r22, 0x20	; 32
 238:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <nRF24L01_send_command>
 23c:	08 95       	ret

0000023e <nRF24L01_read_register>:
 23e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <nRF24L01_send_command>
 242:	08 95       	ret

00000244 <nRF24L01_no_op>:
 244:	20 e0       	ldi	r18, 0x00	; 0
 246:	30 e0       	ldi	r19, 0x00	; 0
 248:	40 e0       	ldi	r20, 0x00	; 0
 24a:	50 e0       	ldi	r21, 0x00	; 0
 24c:	6f ef       	ldi	r22, 0xFF	; 255
 24e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <nRF24L01_send_command>
 252:	08 95       	ret

00000254 <nRF24L01_update_status>:
 254:	0e 94 22 01 	call	0x244	; 0x244 <nRF24L01_no_op>
 258:	08 95       	ret

0000025a <nRF24L01_listen>:
 25a:	df 92       	push	r13
 25c:	ef 92       	push	r14
 25e:	ff 92       	push	r15
 260:	0f 93       	push	r16
 262:	1f 93       	push	r17
 264:	cf 93       	push	r28
 266:	df 93       	push	r29
 268:	00 d0       	rcall	.+0      	; 0x26a <nRF24L01_listen+0x10>
 26a:	00 d0       	rcall	.+0      	; 0x26c <nRF24L01_listen+0x12>
 26c:	00 d0       	rcall	.+0      	; 0x26e <nRF24L01_listen+0x14>
 26e:	cd b7       	in	r28, 0x3d	; 61
 270:	de b7       	in	r29, 0x3e	; 62
 272:	7c 01       	movw	r14, r24
 274:	d6 2e       	mov	r13, r22
 276:	ca 01       	movw	r24, r20
 278:	be 01       	movw	r22, r28
 27a:	6f 5f       	subi	r22, 0xFF	; 255
 27c:	7f 4f       	sbci	r23, 0xFF	; 255
 27e:	0e 94 ca 00 	call	0x194	; 0x194 <copy_address>
 282:	6a e0       	ldi	r22, 0x0A	; 10
 284:	6d 0d       	add	r22, r13
 286:	25 e0       	ldi	r18, 0x05	; 5
 288:	30 e0       	ldi	r19, 0x00	; 0
 28a:	ae 01       	movw	r20, r28
 28c:	4f 5f       	subi	r20, 0xFF	; 255
 28e:	5f 4f       	sbci	r21, 0xFF	; 255
 290:	c7 01       	movw	r24, r14
 292:	0e 94 1b 01 	call	0x236	; 0x236 <nRF24L01_write_register>
 296:	21 e0       	ldi	r18, 0x01	; 1
 298:	30 e0       	ldi	r19, 0x00	; 0
 29a:	ae 01       	movw	r20, r28
 29c:	4a 5f       	subi	r20, 0xFA	; 250
 29e:	5f 4f       	sbci	r21, 0xFF	; 255
 2a0:	62 e0       	ldi	r22, 0x02	; 2
 2a2:	c7 01       	movw	r24, r14
 2a4:	0e 94 1f 01 	call	0x23e	; 0x23e <nRF24L01_read_register>
 2a8:	01 e0       	ldi	r16, 0x01	; 1
 2aa:	10 e0       	ldi	r17, 0x00	; 0
 2ac:	c8 01       	movw	r24, r16
 2ae:	02 c0       	rjmp	.+4      	; 0x2b4 <nRF24L01_listen+0x5a>
 2b0:	88 0f       	add	r24, r24
 2b2:	99 1f       	adc	r25, r25
 2b4:	da 94       	dec	r13
 2b6:	e2 f7       	brpl	.-8      	; 0x2b0 <nRF24L01_listen+0x56>
 2b8:	9e 81       	ldd	r25, Y+6	; 0x06
 2ba:	89 2b       	or	r24, r25
 2bc:	8e 83       	std	Y+6, r24	; 0x06
 2be:	21 e0       	ldi	r18, 0x01	; 1
 2c0:	30 e0       	ldi	r19, 0x00	; 0
 2c2:	ae 01       	movw	r20, r28
 2c4:	4a 5f       	subi	r20, 0xFA	; 250
 2c6:	5f 4f       	sbci	r21, 0xFF	; 255
 2c8:	62 e0       	ldi	r22, 0x02	; 2
 2ca:	c7 01       	movw	r24, r14
 2cc:	0e 94 1b 01 	call	0x236	; 0x236 <nRF24L01_write_register>
 2d0:	d7 01       	movw	r26, r14
 2d2:	13 96       	adiw	r26, 0x03	; 3
 2d4:	ed 91       	ld	r30, X+
 2d6:	fc 91       	ld	r31, X
 2d8:	14 97       	sbiw	r26, 0x04	; 4
 2da:	80 81       	ld	r24, Z
 2dc:	15 96       	adiw	r26, 0x05	; 5
 2de:	0c 90       	ld	r0, X
 2e0:	02 c0       	rjmp	.+4      	; 0x2e6 <nRF24L01_listen+0x8c>
 2e2:	00 0f       	add	r16, r16
 2e4:	11 1f       	adc	r17, r17
 2e6:	0a 94       	dec	r0
 2e8:	e2 f7       	brpl	.-8      	; 0x2e2 <nRF24L01_listen+0x88>
 2ea:	08 2b       	or	r16, r24
 2ec:	00 83       	st	Z, r16
 2ee:	26 96       	adiw	r28, 0x06	; 6
 2f0:	0f b6       	in	r0, 0x3f	; 63
 2f2:	f8 94       	cli
 2f4:	de bf       	out	0x3e, r29	; 62
 2f6:	0f be       	out	0x3f, r0	; 63
 2f8:	cd bf       	out	0x3d, r28	; 61
 2fa:	df 91       	pop	r29
 2fc:	cf 91       	pop	r28
 2fe:	1f 91       	pop	r17
 300:	0f 91       	pop	r16
 302:	ff 90       	pop	r15
 304:	ef 90       	pop	r14
 306:	df 90       	pop	r13
 308:	08 95       	ret

0000030a <nRF24L01_pipe_number_received>:
 30a:	fc 01       	movw	r30, r24
 30c:	27 85       	ldd	r18, Z+15	; 0x0f
 30e:	2e 70       	andi	r18, 0x0E	; 14
 310:	30 e0       	ldi	r19, 0x00	; 0
 312:	35 95       	asr	r19
 314:	27 95       	ror	r18
 316:	26 30       	cpi	r18, 0x06	; 6
 318:	31 05       	cpc	r19, r1
 31a:	1c f4       	brge	.+6      	; 0x322 <nRF24L01_pipe_number_received+0x18>
 31c:	82 2f       	mov	r24, r18
 31e:	93 2f       	mov	r25, r19
 320:	08 95       	ret
 322:	8f ef       	ldi	r24, 0xFF	; 255
 324:	9f ef       	ldi	r25, 0xFF	; 255
 326:	08 95       	ret

00000328 <nRF24L01_data_received>:
 328:	cf 93       	push	r28
 32a:	df 93       	push	r29
 32c:	ec 01       	movw	r28, r24
 32e:	eb 81       	ldd	r30, Y+3	; 0x03
 330:	fc 81       	ldd	r31, Y+4	; 0x04
 332:	80 81       	ld	r24, Z
 334:	21 e0       	ldi	r18, 0x01	; 1
 336:	30 e0       	ldi	r19, 0x00	; 0
 338:	0d 80       	ldd	r0, Y+5	; 0x05
 33a:	02 c0       	rjmp	.+4      	; 0x340 <nRF24L01_data_received+0x18>
 33c:	22 0f       	add	r18, r18
 33e:	33 1f       	adc	r19, r19
 340:	0a 94       	dec	r0
 342:	e2 f7       	brpl	.-8      	; 0x33c <nRF24L01_data_received+0x14>
 344:	20 95       	com	r18
 346:	28 23       	and	r18, r24
 348:	20 83       	st	Z, r18
 34a:	ce 01       	movw	r24, r28
 34c:	0e 94 2a 01 	call	0x254	; 0x254 <nRF24L01_update_status>
 350:	ce 01       	movw	r24, r28
 352:	0e 94 85 01 	call	0x30a	; 0x30a <nRF24L01_pipe_number_received>
 356:	89 2f       	mov	r24, r25
 358:	80 95       	com	r24
 35a:	88 1f       	adc	r24, r24
 35c:	88 27       	eor	r24, r24
 35e:	88 1f       	adc	r24, r24
 360:	df 91       	pop	r29
 362:	cf 91       	pop	r28
 364:	08 95       	ret

00000366 <nRF24L01_clear_interrupts>:
 366:	cf 93       	push	r28
 368:	df 93       	push	r29
 36a:	1f 92       	push	r1
 36c:	cd b7       	in	r28, 0x3d	; 61
 36e:	de b7       	in	r29, 0x3e	; 62
 370:	20 e7       	ldi	r18, 0x70	; 112
 372:	29 83       	std	Y+1, r18	; 0x01
 374:	21 e0       	ldi	r18, 0x01	; 1
 376:	30 e0       	ldi	r19, 0x00	; 0
 378:	ae 01       	movw	r20, r28
 37a:	4f 5f       	subi	r20, 0xFF	; 255
 37c:	5f 4f       	sbci	r21, 0xFF	; 255
 37e:	67 e0       	ldi	r22, 0x07	; 7
 380:	0e 94 1b 01 	call	0x236	; 0x236 <nRF24L01_write_register>
 384:	0f 90       	pop	r0
 386:	df 91       	pop	r29
 388:	cf 91       	pop	r28
 38a:	08 95       	ret

0000038c <nRF24L01_begin>:
 38c:	ff 92       	push	r15
 38e:	0f 93       	push	r16
 390:	1f 93       	push	r17
 392:	cf 93       	push	r28
 394:	df 93       	push	r29
 396:	1f 92       	push	r1
 398:	cd b7       	in	r28, 0x3d	; 61
 39a:	de b7       	in	r29, 0x3e	; 62
 39c:	8c 01       	movw	r16, r24
 39e:	dc 01       	movw	r26, r24
 3a0:	ed 91       	ld	r30, X+
 3a2:	fc 91       	ld	r31, X
 3a4:	11 97       	sbiw	r26, 0x01	; 1
 3a6:	42 91       	ld	r20, -Z
 3a8:	81 e0       	ldi	r24, 0x01	; 1
 3aa:	90 e0       	ldi	r25, 0x00	; 0
 3ac:	9c 01       	movw	r18, r24
 3ae:	12 96       	adiw	r26, 0x02	; 2
 3b0:	0c 90       	ld	r0, X
 3b2:	12 97       	sbiw	r26, 0x02	; 2
 3b4:	02 c0       	rjmp	.+4      	; 0x3ba <nRF24L01_begin+0x2e>
 3b6:	22 0f       	add	r18, r18
 3b8:	33 1f       	adc	r19, r19
 3ba:	0a 94       	dec	r0
 3bc:	e2 f7       	brpl	.-8      	; 0x3b6 <nRF24L01_begin+0x2a>
 3be:	24 2b       	or	r18, r20
 3c0:	20 83       	st	Z, r18
 3c2:	13 96       	adiw	r26, 0x03	; 3
 3c4:	ed 91       	ld	r30, X+
 3c6:	fc 91       	ld	r31, X
 3c8:	14 97       	sbiw	r26, 0x04	; 4
 3ca:	42 91       	ld	r20, -Z
 3cc:	9c 01       	movw	r18, r24
 3ce:	15 96       	adiw	r26, 0x05	; 5
 3d0:	0c 90       	ld	r0, X
 3d2:	15 97       	sbiw	r26, 0x05	; 5
 3d4:	02 c0       	rjmp	.+4      	; 0x3da <nRF24L01_begin+0x4e>
 3d6:	22 0f       	add	r18, r18
 3d8:	33 1f       	adc	r19, r19
 3da:	0a 94       	dec	r0
 3dc:	e2 f7       	brpl	.-8      	; 0x3d6 <nRF24L01_begin+0x4a>
 3de:	24 2b       	or	r18, r20
 3e0:	20 83       	st	Z, r18
 3e2:	ed 91       	ld	r30, X+
 3e4:	fc 91       	ld	r31, X
 3e6:	11 97       	sbiw	r26, 0x01	; 1
 3e8:	40 81       	ld	r20, Z
 3ea:	9c 01       	movw	r18, r24
 3ec:	12 96       	adiw	r26, 0x02	; 2
 3ee:	0c 90       	ld	r0, X
 3f0:	12 97       	sbiw	r26, 0x02	; 2
 3f2:	02 c0       	rjmp	.+4      	; 0x3f8 <nRF24L01_begin+0x6c>
 3f4:	22 0f       	add	r18, r18
 3f6:	33 1f       	adc	r19, r19
 3f8:	0a 94       	dec	r0
 3fa:	e2 f7       	brpl	.-8      	; 0x3f4 <nRF24L01_begin+0x68>
 3fc:	24 2b       	or	r18, r20
 3fe:	20 83       	st	Z, r18
 400:	13 96       	adiw	r26, 0x03	; 3
 402:	ed 91       	ld	r30, X+
 404:	fc 91       	ld	r31, X
 406:	14 97       	sbiw	r26, 0x04	; 4
 408:	30 81       	ld	r19, Z
 40a:	ac 01       	movw	r20, r24
 40c:	15 96       	adiw	r26, 0x05	; 5
 40e:	0c 90       	ld	r0, X
 410:	15 97       	sbiw	r26, 0x05	; 5
 412:	02 c0       	rjmp	.+4      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 414:	44 0f       	add	r20, r20
 416:	55 1f       	adc	r21, r21
 418:	0a 94       	dec	r0
 41a:	e2 f7       	brpl	.-8      	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 41c:	24 2f       	mov	r18, r20
 41e:	20 95       	com	r18
 420:	23 23       	and	r18, r19
 422:	20 83       	st	Z, r18
 424:	2c b5       	in	r18, 0x2c	; 44
 426:	20 61       	ori	r18, 0x10	; 16
 428:	2c bd       	out	0x2c, r18	; 44
 42a:	2c b5       	in	r18, 0x2c	; 44
 42c:	20 64       	ori	r18, 0x40	; 64
 42e:	2c bd       	out	0x2c, r18	; 44
 430:	16 96       	adiw	r26, 0x06	; 6
 432:	ed 91       	ld	r30, X+
 434:	fc 91       	ld	r31, X
 436:	17 97       	sbiw	r26, 0x07	; 7
 438:	42 91       	ld	r20, -Z
 43a:	9c 01       	movw	r18, r24
 43c:	18 96       	adiw	r26, 0x08	; 8
 43e:	0c 90       	ld	r0, X
 440:	18 97       	sbiw	r26, 0x08	; 8
 442:	02 c0       	rjmp	.+4      	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 444:	22 0f       	add	r18, r18
 446:	33 1f       	adc	r19, r19
 448:	0a 94       	dec	r0
 44a:	e2 f7       	brpl	.-8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 44c:	24 2b       	or	r18, r20
 44e:	20 83       	st	Z, r18
 450:	19 96       	adiw	r26, 0x09	; 9
 452:	ed 91       	ld	r30, X+
 454:	fc 91       	ld	r31, X
 456:	1a 97       	sbiw	r26, 0x0a	; 10
 458:	42 91       	ld	r20, -Z
 45a:	9c 01       	movw	r18, r24
 45c:	1b 96       	adiw	r26, 0x0b	; 11
 45e:	0c 90       	ld	r0, X
 460:	1b 97       	sbiw	r26, 0x0b	; 11
 462:	02 c0       	rjmp	.+4      	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
 464:	22 0f       	add	r18, r18
 466:	33 1f       	adc	r19, r19
 468:	0a 94       	dec	r0
 46a:	e2 f7       	brpl	.-8      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
 46c:	24 2b       	or	r18, r20
 46e:	20 83       	st	Z, r18
 470:	1c 96       	adiw	r26, 0x0c	; 12
 472:	ed 91       	ld	r30, X+
 474:	fc 91       	ld	r31, X
 476:	1d 97       	sbiw	r26, 0x0d	; 13
 478:	22 91       	ld	r18, -Z
 47a:	1e 96       	adiw	r26, 0x0e	; 14
 47c:	0c 90       	ld	r0, X
 47e:	02 c0       	rjmp	.+4      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 480:	88 0f       	add	r24, r24
 482:	99 1f       	adc	r25, r25
 484:	0a 94       	dec	r0
 486:	e2 f7       	brpl	.-8      	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 488:	80 95       	com	r24
 48a:	82 23       	and	r24, r18
 48c:	80 83       	st	Z, r24
 48e:	8c b5       	in	r24, 0x2c	; 44
 490:	87 7f       	andi	r24, 0xF7	; 247
 492:	8c bd       	out	0x2c, r24	; 44
 494:	8c b5       	in	r24, 0x2c	; 44
 496:	8b 7f       	andi	r24, 0xFB	; 251
 498:	8c bd       	out	0x2c, r24	; 44
 49a:	8c b5       	in	r24, 0x2c	; 44
 49c:	8e 7f       	andi	r24, 0xFE	; 254
 49e:	8c bd       	out	0x2c, r24	; 44
 4a0:	8c b5       	in	r24, 0x2c	; 44
 4a2:	8d 7f       	andi	r24, 0xFD	; 253
 4a4:	8c bd       	out	0x2c, r24	; 44
 4a6:	8d b5       	in	r24, 0x2d	; 45
 4a8:	81 60       	ori	r24, 0x01	; 1
 4aa:	8d bd       	out	0x2d, r24	; 45
 4ac:	8c b5       	in	r24, 0x2c	; 44
 4ae:	8f 7d       	andi	r24, 0xDF	; 223
 4b0:	8c bd       	out	0x2c, r24	; 44
 4b2:	20 e0       	ldi	r18, 0x00	; 0
 4b4:	30 e0       	ldi	r19, 0x00	; 0
 4b6:	40 e0       	ldi	r20, 0x00	; 0
 4b8:	50 e0       	ldi	r21, 0x00	; 0
 4ba:	62 ee       	ldi	r22, 0xE2	; 226
 4bc:	c8 01       	movw	r24, r16
 4be:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <nRF24L01_send_command>
 4c2:	20 e0       	ldi	r18, 0x00	; 0
 4c4:	30 e0       	ldi	r19, 0x00	; 0
 4c6:	40 e0       	ldi	r20, 0x00	; 0
 4c8:	50 e0       	ldi	r21, 0x00	; 0
 4ca:	61 ee       	ldi	r22, 0xE1	; 225
 4cc:	c8 01       	movw	r24, r16
 4ce:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <nRF24L01_send_command>
 4d2:	c8 01       	movw	r24, r16
 4d4:	0e 94 b3 01 	call	0x366	; 0x366 <nRF24L01_clear_interrupts>
 4d8:	8f e0       	ldi	r24, 0x0F	; 15
 4da:	89 83       	std	Y+1, r24	; 0x01
 4dc:	21 e0       	ldi	r18, 0x01	; 1
 4de:	30 e0       	ldi	r19, 0x00	; 0
 4e0:	ae 01       	movw	r20, r28
 4e2:	4f 5f       	subi	r20, 0xFF	; 255
 4e4:	5f 4f       	sbci	r21, 0xFF	; 255
 4e6:	60 e0       	ldi	r22, 0x00	; 0
 4e8:	c8 01       	movw	r24, r16
 4ea:	0e 94 1b 01 	call	0x236	; 0x236 <nRF24L01_write_register>
 4ee:	0f 2e       	mov	r0, r31
 4f0:	ff e3       	ldi	r31, 0x3F	; 63
 4f2:	ff 2e       	mov	r15, r31
 4f4:	f0 2d       	mov	r31, r0
 4f6:	f9 82       	std	Y+1, r15	; 0x01
 4f8:	21 e0       	ldi	r18, 0x01	; 1
 4fa:	30 e0       	ldi	r19, 0x00	; 0
 4fc:	ae 01       	movw	r20, r28
 4fe:	4f 5f       	subi	r20, 0xFF	; 255
 500:	5f 4f       	sbci	r21, 0xFF	; 255
 502:	61 e0       	ldi	r22, 0x01	; 1
 504:	c8 01       	movw	r24, r16
 506:	0e 94 1b 01 	call	0x236	; 0x236 <nRF24L01_write_register>
 50a:	f9 82       	std	Y+1, r15	; 0x01
 50c:	21 e0       	ldi	r18, 0x01	; 1
 50e:	30 e0       	ldi	r19, 0x00	; 0
 510:	ae 01       	movw	r20, r28
 512:	4f 5f       	subi	r20, 0xFF	; 255
 514:	5f 4f       	sbci	r21, 0xFF	; 255
 516:	6c e1       	ldi	r22, 0x1C	; 28
 518:	c8 01       	movw	r24, r16
 51a:	0e 94 1b 01 	call	0x236	; 0x236 <nRF24L01_write_register>
 51e:	84 e0       	ldi	r24, 0x04	; 4
 520:	89 83       	std	Y+1, r24	; 0x01
 522:	21 e0       	ldi	r18, 0x01	; 1
 524:	30 e0       	ldi	r19, 0x00	; 0
 526:	ae 01       	movw	r20, r28
 528:	4f 5f       	subi	r20, 0xFF	; 255
 52a:	5f 4f       	sbci	r21, 0xFF	; 255
 52c:	6d e1       	ldi	r22, 0x1D	; 29
 52e:	c8 01       	movw	r24, r16
 530:	0e 94 1b 01 	call	0x236	; 0x236 <nRF24L01_write_register>
 534:	19 82       	std	Y+1, r1	; 0x01
 536:	21 e0       	ldi	r18, 0x01	; 1
 538:	30 e0       	ldi	r19, 0x00	; 0
 53a:	ae 01       	movw	r20, r28
 53c:	4f 5f       	subi	r20, 0xFF	; 255
 53e:	5f 4f       	sbci	r21, 0xFF	; 255
 540:	62 e0       	ldi	r22, 0x02	; 2
 542:	c8 01       	movw	r24, r16
 544:	0e 94 1b 01 	call	0x236	; 0x236 <nRF24L01_write_register>
 548:	0f 90       	pop	r0
 54a:	df 91       	pop	r29
 54c:	cf 91       	pop	r28
 54e:	1f 91       	pop	r17
 550:	0f 91       	pop	r16
 552:	ff 90       	pop	r15
 554:	08 95       	ret

00000556 <nRF24L01_clear_receive_interrupt>:
 556:	cf 93       	push	r28
 558:	df 93       	push	r29
 55a:	1f 92       	push	r1
 55c:	cd b7       	in	r28, 0x3d	; 61
 55e:	de b7       	in	r29, 0x3e	; 62
 560:	fc 01       	movw	r30, r24
 562:	97 85       	ldd	r25, Z+15	; 0x0f
 564:	90 64       	ori	r25, 0x40	; 64
 566:	99 83       	std	Y+1, r25	; 0x01
 568:	21 e0       	ldi	r18, 0x01	; 1
 56a:	30 e0       	ldi	r19, 0x00	; 0
 56c:	ae 01       	movw	r20, r28
 56e:	4f 5f       	subi	r20, 0xFF	; 255
 570:	5f 4f       	sbci	r21, 0xFF	; 255
 572:	67 e0       	ldi	r22, 0x07	; 7
 574:	cf 01       	movw	r24, r30
 576:	0e 94 1b 01 	call	0x236	; 0x236 <nRF24L01_write_register>
 57a:	0f 90       	pop	r0
 57c:	df 91       	pop	r29
 57e:	cf 91       	pop	r28
 580:	08 95       	ret

00000582 <nRF24L01_read_received_data>:
 582:	0f 93       	push	r16
 584:	1f 93       	push	r17
 586:	cf 93       	push	r28
 588:	df 93       	push	r29
 58a:	8c 01       	movw	r16, r24
 58c:	eb 01       	movw	r28, r22
 58e:	0e 94 85 01 	call	0x30a	; 0x30a <nRF24L01_pipe_number_received>
 592:	99 83       	std	Y+1, r25	; 0x01
 594:	88 83       	st	Y, r24
 596:	c8 01       	movw	r24, r16
 598:	0e 94 ab 02 	call	0x556	; 0x556 <nRF24L01_clear_receive_interrupt>
 59c:	88 81       	ld	r24, Y
 59e:	99 81       	ldd	r25, Y+1	; 0x01
 5a0:	99 23       	and	r25, r25
 5a2:	1c f4       	brge	.+6      	; 0x5aa <nRF24L01_read_received_data+0x28>
 5a4:	1a a2       	std	Y+34, r1	; 0x22
 5a6:	80 e0       	ldi	r24, 0x00	; 0
 5a8:	17 c0       	rjmp	.+46     	; 0x5d8 <nRF24L01_read_received_data+0x56>
 5aa:	21 e0       	ldi	r18, 0x01	; 1
 5ac:	30 e0       	ldi	r19, 0x00	; 0
 5ae:	ae 01       	movw	r20, r28
 5b0:	4e 5d       	subi	r20, 0xDE	; 222
 5b2:	5f 4f       	sbci	r21, 0xFF	; 255
 5b4:	60 e6       	ldi	r22, 0x60	; 96
 5b6:	c8 01       	movw	r24, r16
 5b8:	0e 94 1f 01 	call	0x23e	; 0x23e <nRF24L01_read_register>
 5bc:	2a a1       	ldd	r18, Y+34	; 0x22
 5be:	22 23       	and	r18, r18
 5c0:	51 f0       	breq	.+20     	; 0x5d6 <nRF24L01_read_received_data+0x54>
 5c2:	30 e0       	ldi	r19, 0x00	; 0
 5c4:	ae 01       	movw	r20, r28
 5c6:	4e 5f       	subi	r20, 0xFE	; 254
 5c8:	5f 4f       	sbci	r21, 0xFF	; 255
 5ca:	61 e6       	ldi	r22, 0x61	; 97
 5cc:	c8 01       	movw	r24, r16
 5ce:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <nRF24L01_send_command>
 5d2:	81 e0       	ldi	r24, 0x01	; 1
 5d4:	01 c0       	rjmp	.+2      	; 0x5d8 <nRF24L01_read_received_data+0x56>
 5d6:	81 e0       	ldi	r24, 0x01	; 1
 5d8:	df 91       	pop	r29
 5da:	cf 91       	pop	r28
 5dc:	1f 91       	pop	r17
 5de:	0f 91       	pop	r16
 5e0:	08 95       	ret

000005e2 <malloc>:
 5e2:	cf 93       	push	r28
 5e4:	df 93       	push	r29
 5e6:	82 30       	cpi	r24, 0x02	; 2
 5e8:	91 05       	cpc	r25, r1
 5ea:	10 f4       	brcc	.+4      	; 0x5f0 <malloc+0xe>
 5ec:	82 e0       	ldi	r24, 0x02	; 2
 5ee:	90 e0       	ldi	r25, 0x00	; 0
 5f0:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__flp>
 5f4:	f0 91 0b 01 	lds	r31, 0x010B	; 0x80010b <__flp+0x1>
 5f8:	20 e0       	ldi	r18, 0x00	; 0
 5fa:	30 e0       	ldi	r19, 0x00	; 0
 5fc:	c0 e0       	ldi	r28, 0x00	; 0
 5fe:	d0 e0       	ldi	r29, 0x00	; 0
 600:	30 97       	sbiw	r30, 0x00	; 0
 602:	11 f1       	breq	.+68     	; 0x648 <malloc+0x66>
 604:	40 81       	ld	r20, Z
 606:	51 81       	ldd	r21, Z+1	; 0x01
 608:	48 17       	cp	r20, r24
 60a:	59 07       	cpc	r21, r25
 60c:	c0 f0       	brcs	.+48     	; 0x63e <malloc+0x5c>
 60e:	48 17       	cp	r20, r24
 610:	59 07       	cpc	r21, r25
 612:	61 f4       	brne	.+24     	; 0x62c <malloc+0x4a>
 614:	82 81       	ldd	r24, Z+2	; 0x02
 616:	93 81       	ldd	r25, Z+3	; 0x03
 618:	20 97       	sbiw	r28, 0x00	; 0
 61a:	19 f0       	breq	.+6      	; 0x622 <malloc+0x40>
 61c:	9b 83       	std	Y+3, r25	; 0x03
 61e:	8a 83       	std	Y+2, r24	; 0x02
 620:	2b c0       	rjmp	.+86     	; 0x678 <malloc+0x96>
 622:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__flp+0x1>
 626:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__flp>
 62a:	26 c0       	rjmp	.+76     	; 0x678 <malloc+0x96>
 62c:	21 15       	cp	r18, r1
 62e:	31 05       	cpc	r19, r1
 630:	19 f0       	breq	.+6      	; 0x638 <malloc+0x56>
 632:	42 17       	cp	r20, r18
 634:	53 07       	cpc	r21, r19
 636:	18 f4       	brcc	.+6      	; 0x63e <malloc+0x5c>
 638:	9a 01       	movw	r18, r20
 63a:	be 01       	movw	r22, r28
 63c:	df 01       	movw	r26, r30
 63e:	ef 01       	movw	r28, r30
 640:	02 80       	ldd	r0, Z+2	; 0x02
 642:	f3 81       	ldd	r31, Z+3	; 0x03
 644:	e0 2d       	mov	r30, r0
 646:	dc cf       	rjmp	.-72     	; 0x600 <malloc+0x1e>
 648:	21 15       	cp	r18, r1
 64a:	31 05       	cpc	r19, r1
 64c:	09 f1       	breq	.+66     	; 0x690 <malloc+0xae>
 64e:	28 1b       	sub	r18, r24
 650:	39 0b       	sbc	r19, r25
 652:	24 30       	cpi	r18, 0x04	; 4
 654:	31 05       	cpc	r19, r1
 656:	90 f4       	brcc	.+36     	; 0x67c <malloc+0x9a>
 658:	12 96       	adiw	r26, 0x02	; 2
 65a:	8d 91       	ld	r24, X+
 65c:	9c 91       	ld	r25, X
 65e:	13 97       	sbiw	r26, 0x03	; 3
 660:	61 15       	cp	r22, r1
 662:	71 05       	cpc	r23, r1
 664:	21 f0       	breq	.+8      	; 0x66e <malloc+0x8c>
 666:	fb 01       	movw	r30, r22
 668:	93 83       	std	Z+3, r25	; 0x03
 66a:	82 83       	std	Z+2, r24	; 0x02
 66c:	04 c0       	rjmp	.+8      	; 0x676 <malloc+0x94>
 66e:	90 93 0b 01 	sts	0x010B, r25	; 0x80010b <__flp+0x1>
 672:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__flp>
 676:	fd 01       	movw	r30, r26
 678:	32 96       	adiw	r30, 0x02	; 2
 67a:	44 c0       	rjmp	.+136    	; 0x704 <malloc+0x122>
 67c:	fd 01       	movw	r30, r26
 67e:	e2 0f       	add	r30, r18
 680:	f3 1f       	adc	r31, r19
 682:	81 93       	st	Z+, r24
 684:	91 93       	st	Z+, r25
 686:	22 50       	subi	r18, 0x02	; 2
 688:	31 09       	sbc	r19, r1
 68a:	2d 93       	st	X+, r18
 68c:	3c 93       	st	X, r19
 68e:	3a c0       	rjmp	.+116    	; 0x704 <malloc+0x122>
 690:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
 694:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
 698:	23 2b       	or	r18, r19
 69a:	41 f4       	brne	.+16     	; 0x6ac <malloc+0xca>
 69c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 6a0:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 6a4:	30 93 09 01 	sts	0x0109, r19	; 0x800109 <__brkval+0x1>
 6a8:	20 93 08 01 	sts	0x0108, r18	; 0x800108 <__brkval>
 6ac:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 6b0:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 6b4:	21 15       	cp	r18, r1
 6b6:	31 05       	cpc	r19, r1
 6b8:	41 f4       	brne	.+16     	; 0x6ca <malloc+0xe8>
 6ba:	2d b7       	in	r18, 0x3d	; 61
 6bc:	3e b7       	in	r19, 0x3e	; 62
 6be:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 6c2:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 6c6:	24 1b       	sub	r18, r20
 6c8:	35 0b       	sbc	r19, r21
 6ca:	e0 91 08 01 	lds	r30, 0x0108	; 0x800108 <__brkval>
 6ce:	f0 91 09 01 	lds	r31, 0x0109	; 0x800109 <__brkval+0x1>
 6d2:	e2 17       	cp	r30, r18
 6d4:	f3 07       	cpc	r31, r19
 6d6:	a0 f4       	brcc	.+40     	; 0x700 <malloc+0x11e>
 6d8:	2e 1b       	sub	r18, r30
 6da:	3f 0b       	sbc	r19, r31
 6dc:	28 17       	cp	r18, r24
 6de:	39 07       	cpc	r19, r25
 6e0:	78 f0       	brcs	.+30     	; 0x700 <malloc+0x11e>
 6e2:	ac 01       	movw	r20, r24
 6e4:	4e 5f       	subi	r20, 0xFE	; 254
 6e6:	5f 4f       	sbci	r21, 0xFF	; 255
 6e8:	24 17       	cp	r18, r20
 6ea:	35 07       	cpc	r19, r21
 6ec:	48 f0       	brcs	.+18     	; 0x700 <malloc+0x11e>
 6ee:	4e 0f       	add	r20, r30
 6f0:	5f 1f       	adc	r21, r31
 6f2:	50 93 09 01 	sts	0x0109, r21	; 0x800109 <__brkval+0x1>
 6f6:	40 93 08 01 	sts	0x0108, r20	; 0x800108 <__brkval>
 6fa:	81 93       	st	Z+, r24
 6fc:	91 93       	st	Z+, r25
 6fe:	02 c0       	rjmp	.+4      	; 0x704 <malloc+0x122>
 700:	e0 e0       	ldi	r30, 0x00	; 0
 702:	f0 e0       	ldi	r31, 0x00	; 0
 704:	cf 01       	movw	r24, r30
 706:	df 91       	pop	r29
 708:	cf 91       	pop	r28
 70a:	08 95       	ret

0000070c <free>:
 70c:	0f 93       	push	r16
 70e:	1f 93       	push	r17
 710:	cf 93       	push	r28
 712:	df 93       	push	r29
 714:	00 97       	sbiw	r24, 0x00	; 0
 716:	09 f4       	brne	.+2      	; 0x71a <free+0xe>
 718:	8c c0       	rjmp	.+280    	; 0x832 <free+0x126>
 71a:	fc 01       	movw	r30, r24
 71c:	32 97       	sbiw	r30, 0x02	; 2
 71e:	13 82       	std	Z+3, r1	; 0x03
 720:	12 82       	std	Z+2, r1	; 0x02
 722:	00 91 0a 01 	lds	r16, 0x010A	; 0x80010a <__flp>
 726:	10 91 0b 01 	lds	r17, 0x010B	; 0x80010b <__flp+0x1>
 72a:	01 15       	cp	r16, r1
 72c:	11 05       	cpc	r17, r1
 72e:	81 f4       	brne	.+32     	; 0x750 <free+0x44>
 730:	20 81       	ld	r18, Z
 732:	31 81       	ldd	r19, Z+1	; 0x01
 734:	82 0f       	add	r24, r18
 736:	93 1f       	adc	r25, r19
 738:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
 73c:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
 740:	28 17       	cp	r18, r24
 742:	39 07       	cpc	r19, r25
 744:	79 f5       	brne	.+94     	; 0x7a4 <free+0x98>
 746:	f0 93 09 01 	sts	0x0109, r31	; 0x800109 <__brkval+0x1>
 74a:	e0 93 08 01 	sts	0x0108, r30	; 0x800108 <__brkval>
 74e:	71 c0       	rjmp	.+226    	; 0x832 <free+0x126>
 750:	d8 01       	movw	r26, r16
 752:	40 e0       	ldi	r20, 0x00	; 0
 754:	50 e0       	ldi	r21, 0x00	; 0
 756:	ae 17       	cp	r26, r30
 758:	bf 07       	cpc	r27, r31
 75a:	50 f4       	brcc	.+20     	; 0x770 <free+0x64>
 75c:	12 96       	adiw	r26, 0x02	; 2
 75e:	2d 91       	ld	r18, X+
 760:	3c 91       	ld	r19, X
 762:	13 97       	sbiw	r26, 0x03	; 3
 764:	ad 01       	movw	r20, r26
 766:	21 15       	cp	r18, r1
 768:	31 05       	cpc	r19, r1
 76a:	09 f1       	breq	.+66     	; 0x7ae <free+0xa2>
 76c:	d9 01       	movw	r26, r18
 76e:	f3 cf       	rjmp	.-26     	; 0x756 <free+0x4a>
 770:	9d 01       	movw	r18, r26
 772:	da 01       	movw	r26, r20
 774:	33 83       	std	Z+3, r19	; 0x03
 776:	22 83       	std	Z+2, r18	; 0x02
 778:	60 81       	ld	r22, Z
 77a:	71 81       	ldd	r23, Z+1	; 0x01
 77c:	86 0f       	add	r24, r22
 77e:	97 1f       	adc	r25, r23
 780:	82 17       	cp	r24, r18
 782:	93 07       	cpc	r25, r19
 784:	69 f4       	brne	.+26     	; 0x7a0 <free+0x94>
 786:	ec 01       	movw	r28, r24
 788:	28 81       	ld	r18, Y
 78a:	39 81       	ldd	r19, Y+1	; 0x01
 78c:	26 0f       	add	r18, r22
 78e:	37 1f       	adc	r19, r23
 790:	2e 5f       	subi	r18, 0xFE	; 254
 792:	3f 4f       	sbci	r19, 0xFF	; 255
 794:	31 83       	std	Z+1, r19	; 0x01
 796:	20 83       	st	Z, r18
 798:	8a 81       	ldd	r24, Y+2	; 0x02
 79a:	9b 81       	ldd	r25, Y+3	; 0x03
 79c:	93 83       	std	Z+3, r25	; 0x03
 79e:	82 83       	std	Z+2, r24	; 0x02
 7a0:	45 2b       	or	r20, r21
 7a2:	29 f4       	brne	.+10     	; 0x7ae <free+0xa2>
 7a4:	f0 93 0b 01 	sts	0x010B, r31	; 0x80010b <__flp+0x1>
 7a8:	e0 93 0a 01 	sts	0x010A, r30	; 0x80010a <__flp>
 7ac:	42 c0       	rjmp	.+132    	; 0x832 <free+0x126>
 7ae:	13 96       	adiw	r26, 0x03	; 3
 7b0:	fc 93       	st	X, r31
 7b2:	ee 93       	st	-X, r30
 7b4:	12 97       	sbiw	r26, 0x02	; 2
 7b6:	ed 01       	movw	r28, r26
 7b8:	49 91       	ld	r20, Y+
 7ba:	59 91       	ld	r21, Y+
 7bc:	9e 01       	movw	r18, r28
 7be:	24 0f       	add	r18, r20
 7c0:	35 1f       	adc	r19, r21
 7c2:	e2 17       	cp	r30, r18
 7c4:	f3 07       	cpc	r31, r19
 7c6:	71 f4       	brne	.+28     	; 0x7e4 <free+0xd8>
 7c8:	80 81       	ld	r24, Z
 7ca:	91 81       	ldd	r25, Z+1	; 0x01
 7cc:	84 0f       	add	r24, r20
 7ce:	95 1f       	adc	r25, r21
 7d0:	02 96       	adiw	r24, 0x02	; 2
 7d2:	11 96       	adiw	r26, 0x01	; 1
 7d4:	9c 93       	st	X, r25
 7d6:	8e 93       	st	-X, r24
 7d8:	82 81       	ldd	r24, Z+2	; 0x02
 7da:	93 81       	ldd	r25, Z+3	; 0x03
 7dc:	13 96       	adiw	r26, 0x03	; 3
 7de:	9c 93       	st	X, r25
 7e0:	8e 93       	st	-X, r24
 7e2:	12 97       	sbiw	r26, 0x02	; 2
 7e4:	e0 e0       	ldi	r30, 0x00	; 0
 7e6:	f0 e0       	ldi	r31, 0x00	; 0
 7e8:	d8 01       	movw	r26, r16
 7ea:	12 96       	adiw	r26, 0x02	; 2
 7ec:	8d 91       	ld	r24, X+
 7ee:	9c 91       	ld	r25, X
 7f0:	13 97       	sbiw	r26, 0x03	; 3
 7f2:	00 97       	sbiw	r24, 0x00	; 0
 7f4:	19 f0       	breq	.+6      	; 0x7fc <free+0xf0>
 7f6:	f8 01       	movw	r30, r16
 7f8:	8c 01       	movw	r16, r24
 7fa:	f6 cf       	rjmp	.-20     	; 0x7e8 <free+0xdc>
 7fc:	8d 91       	ld	r24, X+
 7fe:	9c 91       	ld	r25, X
 800:	98 01       	movw	r18, r16
 802:	2e 5f       	subi	r18, 0xFE	; 254
 804:	3f 4f       	sbci	r19, 0xFF	; 255
 806:	82 0f       	add	r24, r18
 808:	93 1f       	adc	r25, r19
 80a:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <__brkval>
 80e:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <__brkval+0x1>
 812:	28 17       	cp	r18, r24
 814:	39 07       	cpc	r19, r25
 816:	69 f4       	brne	.+26     	; 0x832 <free+0x126>
 818:	30 97       	sbiw	r30, 0x00	; 0
 81a:	29 f4       	brne	.+10     	; 0x826 <free+0x11a>
 81c:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <__flp+0x1>
 820:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__flp>
 824:	02 c0       	rjmp	.+4      	; 0x82a <free+0x11e>
 826:	13 82       	std	Z+3, r1	; 0x03
 828:	12 82       	std	Z+2, r1	; 0x02
 82a:	10 93 09 01 	sts	0x0109, r17	; 0x800109 <__brkval+0x1>
 82e:	00 93 08 01 	sts	0x0108, r16	; 0x800108 <__brkval>
 832:	df 91       	pop	r29
 834:	cf 91       	pop	r28
 836:	1f 91       	pop	r17
 838:	0f 91       	pop	r16
 83a:	08 95       	ret

0000083c <_exit>:
 83c:	f8 94       	cli

0000083e <__stop_program>:
 83e:	ff cf       	rjmp	.-2      	; 0x83e <__stop_program>
